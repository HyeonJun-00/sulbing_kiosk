hmtl
    head
        title 설빙 - 관리자 페이지
        link( rel="stylesheet", href="//cdn.jsdelivr.net/npm/xeicon@2.3.3/xeicon.min.css" )
        script(src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.4/jquery.js'
        integrity='sha512-6DC1eE3AWg1bgitkoaRM1lhY98PxbMIbhgYCGV107aZlyzzvaWCW1nJW2vDuYQm06hXrW0As6OGKcIaAVWnHJw=='
        crossorigin='anonymous')
        script(src="https://kit.fontawesome.com/90abd907ab.js" crossorigin="anonymous")
        link(rel="preconnect" href="https://fonts.googleapis.com")
        link(rel="preconnect" href="https://fonts.gstatic.com" crossorigin)
        link(href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@700&display=swap" rel="stylesheet")
        link(rel="stylesheet", href="./css/admin_order.css")
    body
        main.mainDisplay
            ul.mainMenu
                li
                    a( href="/admin_order" )
                        img.logo(src="./images/sulbingLogo.png", alt="설빙로고", title="설빙로고")
                li
                    a( href="/admin_order" ) 주문현황
                li
                    a( href="/admin_product" ) 상품재고
                li
                    a( href="/admin_sales" ) 매출
                li
                    a( href="/admin_menu" ) 메뉴관리
                li
                    a( href="/admin_user" ) 회원관리
            section.adminPage
                section.headFrame
                    h1 주문현황
                section.mainContent
                    section.searchBox
                        input.searchAllBtn.targetStatus( type="button", value="전체", data-serch-status="true" )
                        input.searchWaitBtn( type="button", value="대기", data-serch-status="false" )
                        input.searchCompleteBtn( type="button", value="완료", data-serch-status="false" )
                        input.searchRefuncBtn( type="button", value="환불", data-serch-status="false" )
                        form#searchDayform
                            input.searchInput#searchDay( type="date", name="day" )
                            button
                            i.xi-refresh( onclick="location.reload();" )
                    section.postTable
                        ul.orderRowSet
                            li
                                ul.orderColSet
                                    li No
                                    li 주문번호
                                    li 상태
                                    li 합계(원)
                                    li 할인율(%)
                                    li 수수료(%)
                                    li 스탬프
                                    li 최종금액(원)
                                    li 적립
                                    li 주문 형태
                                    li 메모
                                    li 주문자
                                    li 결제일
                                    li 환불일
                                    li 기능
                        ul.orderReadRowSet
                            each item, i in readPost
                                li.orderReadRow
                                    form.orderSetForm
                                        ul.orderColSet( class=`${ ( item.status == 'wait' )? 'orderWait': ( item.status == 'refund' )? 'orderRefund': '' }` )
                                            li= i + 1
                                                input( type="hidden" name="id" data-origin-value=`${item.id}`, value=`${item.id}` )
                                            li= item.id.toString().slice( -3 ).padStart( 3, '0' )
                                            - let statusObj= { wait: '대기', complete: '완료', refund: '환불' };
                                            li= statusObj[item.status]
                                            li= item.total_price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',')
                                            li= item.total_discount
                                            li= item.total_charge
                                            li= ( item.use_stamp )? 'Y': '-'
                                            li= item.final_price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',')
                                            li= ( item.save_stamp )? item.save_stamp: '-'
                                            li= ( item.take_out == '' )? '매장': '포장'
                                            li
                                                input( data-origin-value=`${ ( item.remark )? item.remark: '' }`, value=`${ ( item.remark )? item.remark: '' }` )
                                                input.remarkUpdateBtn( type="button", value="수정" )
                                            li= ( item.user_tel )? item.user_tel: '-'
                                            li= item.purchase_date
                                            li= ( item.refund_date )? item.refund_date: '-'
                                            li
                                                input.completeBtn( type="button", value="완료" )
                                            li
                                                input.waitBtn( type="button", value="대기" )
                                            li
                                                input.refundBtn( type="button", value="환불" )
                                        ul.orderColSet.productColSet
                                            - let productObj= {};
                                            each product_item, pI in productPost
                                                - ( !productObj[product_item.id] ) &&  ( productObj[product_item.id]= [] )
                                                - productObj[product_item.id].push( product_item.id );
                                                //- productObj[id]= 1;
                                                -console.log( productObj);
                                                li= pI.id
                            else
                                li.emptyRow 게시물이 존재하지 않습니다.
                    section.tablePaging
                        - let pageCnt= ( ( orderTotCnt[0].cnt / 10 ) < 1 )? 1 : ( orderTotCnt[0].cnt / 10 ) - 1;
                        - for( let i= 0; i < pageCnt; i++ )
                            a( data-page-idx=`${i}`, data-page=`${i == nowPage}` )= i + 1
                    section.modalConfirmBak#modalConfirmBak
                        section.modalConfirm
                            p 수정하시겠습니까
                            .modalBtnSet
                                button.modalBtn( data-modal-confirm=true ) YES
                                button.modalBtn( data-modal-confirm=false ) CANCEL
                section.footer
        script(src="./js/adminOrder.js")